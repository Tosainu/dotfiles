snippet include
abbr   #include <iostream>
  #include <${1:iostream}>${0}

snippet include_local
abbr   #include "mylib.h"
  #include "${1}"${0}

snippet int_main
abbr    int main() {}
  int main() {
    ${0}
  }

snippet auto_main
abbr    auto main() -> int {}
  auto main() -> int {
    ${0}
  }

snippet int_main_args
abbr    int main(int argc, char **argv) {}
  int main(int argc, char **argv) {
    ${0}
  }

snippet auto_main_args
abbr    auto main(int argc, char **argv) -> int {}
  auto main(int argc, char **argv) -> int {
    ${0}
  }

snippet hello_world
  #include <iostream>

  auto main() -> int {
    std::cout << "Hello, World!" << std::endl;${0}
  }

snippet print
  std::cout << ${1:"Hello, World!"} << std::endl;${0}

snippet func
  ${1:void} ${2:func}(${3}) {
    ${0}
  }

snippet if
abbr    if () {}
  if (${1}) {
    ${0}
  }

snippet for
abbr    for (;;) {}
  for (${1:int i = 0}; ${2}; ${3:++i}) {
    ${0}
  }

snippet for_range
abbr    for (:) {}
  for (${1:auto&&} ${2:var} : ${3:container}) {
    ${0}
  }

snippet class
abbr    class {}
  class ${1:#:name} {
    ${0}
  };

snippet enum
abbr    enum class {}
  enum class ${1:#:name} {
    ${0}
  };

snippet template
abbr    template <typename T>
  template <${1:typename} ${2:T}>${0}

snippet static_cast
abbr    static_cast<>()
  static_cast<${1}>(${2})${0}

snippet reinterpret_cast
abbr    reinterpret_cast<>()
  reinterpret_cast<${1}>(${2})${0}

snippet const_cast
abbr    const_cast<>()
  const_cast<${1}>(${2})${0}

snippet dynamic_cast
abbr    dynamic_cast<>()
  dynamic_cast<${1}>(${2})${0}
